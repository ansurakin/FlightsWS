
package ru.javabegin.training.flight.ws;

import java.util.List;
import javax.jws.HandlerChain;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FlightWS", targetNamespace = "http://javabegin.ru/training/ws")
@HandlerChain(file = "FlightWS_handler.xml")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightWS {


    /**
     * 
     * @param code
     * @return
     *     returns ru.javabegin.training.flight.ws.Reservation
     * @throws ArgumentException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkReservationByCode", targetNamespace = "http://javabegin.ru/training/ws", className = "ru.javabegin.training.flight.ws.CheckReservationByCode")
    @ResponseWrapper(localName = "checkReservationByCodeResponse", targetNamespace = "http://javabegin.ru/training/ws", className = "ru.javabegin.training.flight.ws.CheckReservationByCodeResponse")
    @Action(input = "http://javabegin.ru/training/ws/FlightWS/checkReservationByCodeRequest", output = "http://javabegin.ru/training/ws/FlightWS/checkReservationByCodeResponse", fault = {
        @FaultAction(className = ArgumentException_Exception.class, value = "http://javabegin.ru/training/ws/FlightWS/checkReservationByCode/Fault/ArgumentException")
    })
    public Reservation checkReservationByCode(
        @WebParam(name = "code", targetNamespace = "")
        String code)
        throws ArgumentException_Exception
    ;

    /**
     * 
     * @param cityTo
     * @param cityFrom
     * @param date
     * @return
     *     returns java.util.List<ru.javabegin.training.flight.ws.Flight>
     * @throws ArgumentException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchFlight", targetNamespace = "http://javabegin.ru/training/ws", className = "ru.javabegin.training.flight.ws.SearchFlight")
    @ResponseWrapper(localName = "searchFlightResponse", targetNamespace = "http://javabegin.ru/training/ws", className = "ru.javabegin.training.flight.ws.SearchFlightResponse")
    @Action(input = "http://javabegin.ru/training/ws/FlightWS/searchFlightRequest", output = "http://javabegin.ru/training/ws/FlightWS/searchFlightResponse", fault = {
        @FaultAction(className = ArgumentException_Exception.class, value = "http://javabegin.ru/training/ws/Fault")
    })
    public List<Flight> searchFlight(
        @WebParam(name = "date", targetNamespace = "")
        Long date,
        @WebParam(name = "cityFrom", targetNamespace = "")
        City cityFrom,
        @WebParam(name = "cityTo", targetNamespace = "")
        City cityTo)
        throws ArgumentException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<ru.javabegin.training.flight.ws.City>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCities", targetNamespace = "http://javabegin.ru/training/ws", className = "ru.javabegin.training.flight.ws.GetAllCities")
    @ResponseWrapper(localName = "getAllCitiesResponse", targetNamespace = "http://javabegin.ru/training/ws", className = "ru.javabegin.training.flight.ws.GetAllCitiesResponse")
    @Action(input = "http://javabegin.ru/training/ws/FlightWS/getAllCitiesRequest", output = "http://javabegin.ru/training/ws/FlightWS/getAllCitiesResponse")
    public List<City> getAllCities();

    /**
     * 
     * @param addInfo
     * @param passenger
     * @param flight
     * @param place
     * @return
     *     returns boolean
     * @throws ArgumentException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buyTicket", targetNamespace = "http://javabegin.ru/training/ws", className = "ru.javabegin.training.flight.ws.BuyTicket")
    @ResponseWrapper(localName = "buyTicketResponse", targetNamespace = "http://javabegin.ru/training/ws", className = "ru.javabegin.training.flight.ws.BuyTicketResponse")
    @Action(input = "http://javabegin.ru/training/ws/FlightWS/buyTicketRequest", output = "http://javabegin.ru/training/ws/FlightWS/buyTicketResponse", fault = {
        @FaultAction(className = ArgumentException_Exception.class, value = "http://javabegin.ru/training/ws/FlightWS/buyTicket/Fault/ArgumentException")
    })
    public boolean buyTicket(
        @WebParam(name = "flight", targetNamespace = "")
        Flight flight,
        @WebParam(name = "place", targetNamespace = "")
        Place place,
        @WebParam(name = "passenger", targetNamespace = "")
        Passenger passenger,
        @WebParam(name = "addInfo", targetNamespace = "")
        String addInfo)
        throws ArgumentException_Exception
    ;

}
